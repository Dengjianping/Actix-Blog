[package]
name = "actix_blog"
version = "0.1.0"
authors = ["Dengjianping <djptux@gmail.com>"]

[lib]
proc-macro = true
path = "src/lib.rs"

[[bin]]
name = "main"
doc = false
path = "src/main.rs"

[workspace]
members = [
    "",
]

[dependencies]
diesel = { version = "1.3.3", features = ["postgres", "r2d2", "chrono"] }
diesel_codegen = { version = "*", features = ["postgres"] }
dotenv = "0.10.1"
tera = "0.11.19" # template engine
serde = "1.0"
serde_derive = "1.0"
serde_json = "1.0"
bcrypt = "0.2" # hash password
actix = "0.7"
actix-web = "0.7.14"
env_logger = "0.5"
lazy_static = "1.1"
futures = "0.1"
json = "*"
chrono = { version = "0.4.6", features = ["serde", "rustc-serialize"] }

syn = { version = "0.15", features = ["full", "extra-traits"] }
quote = "0.6"
proc-macro2 = "0.4"

# a book named 'Rust High Performance' talks about how to optimize rust code.
# some basic optimization for release build
# https://doc.rust-lang.org/cargo/reference/manifest.html#the-profile-sections
[profile.release]
opt-level = 2 # threr're three levels for optimizing rust code
lto = true # optimization for Link-Time Optimizations